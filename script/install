#!/usr/bin/env bash

echo "Installing dotfiles..."
echo
dotfiles_dir=`pwd`
cd "$dotfile_dir"
git pull origin master
echo

function install {
  # Bash stuff
  ln -sf "$dotfiles_dir/bash/bash_aliases" ~/.bash_aliases
  ln -sf "$dotfiles_dir/bash/bash_functions" ~/.bash_functions
  ln -sf "$dotfiles_dir/bash/bash_profile" ~/.bash_profile

  # Git stuff
  ln -sf "$dotfiles_dir/git/gitconfig" ~/.gitconfig
  ln -sf "$dotfiles_dir/git/gitignore" ~/.gitignore
  ln -sf "$dotfiles_dir/git/gitk" ~/.gitk
  git_username_setup

  # Ruby stuff
  ln -sf "$dotfiles_dir/ruby/gemrc" ~/.gemrc
  ln -sf "$dotfiles_dir/ruby/irbrc" ~/.irbrc
  ln -sf "$dotfiles_dir/ruby/rspec" ~/.rspec

  # Custom binaries
  if [[ $(readlink ~/.bin) != "$dotfiles_dir/bin" ]]; then
    ln -sf "$dotfiles_dir/bin" ~/.bin
  fi

  source ~/.bash_profile

  echo "Installation completed. Enjoy!"
}

function git_username_setup {
  if grep -q "GIT_AUTHOR_NAME" ~/.gitconfig; then
    read -e -p "What is your Git author name?" git_author_name

    sed -i -e "s/GIT_AUTHOR_NAME/$git_author_name/g" ~/.gitconfig
  fi

  if grep -q "GIT_AUTHOR_EMAIL" ~/.gitconfig; then
    read -e -p "What is your Git author email?" git_author_email

    sed -i -e "s/GIT_AUTHOR_EMAIL/$git_author_email/g" ~/.gitconfig
  fi
}

if [ "$1" == "--force" -o "$1" == "-f" ]; then
  install
else
  read -p "This will overwrite the existing dotfiles. Are you sure? (y/n) " -n 1
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    install
  fi
fi

